{"version":3,"sources":["main/page-template.ts","pages/main.ts","pages/pictures.ts","pages/videos.ts","pages/app.ts","index.ts"],"names":[],"mappings":";;;AAmBA,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAnBA,MAAe,EAIV,YAAY,GACJ,KAAA,UAAY,SAAS,cAAc,WACnC,KAAA,UAAU,GAAK,EAId,kBAAkB,GAClB,MAAA,EAAc,SAAS,cAAc,MAEpC,OADP,EAAY,UAAY,EACjB,EAEX,SACW,OAAA,KAAK,WAdT,EAAA,WAAa,GAiBxB,QAAA,QAAe;;ACFf,aAAA,IAAA,EAAA,MAAA,KAAA,iBAAA,SAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,IAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAjBA,MAAA,EAAA,EAAA,QAAA,0BAEA,MAAM,UAAiB,EAAA,QAKnB,YAAY,GACF,MAAA,GAGV,SACU,MAAA,EAAQ,KAAK,kBAAkB,EAAS,WAAW,WAElD,OADF,KAAA,UAAU,OAAO,GACf,KAAK,WAXT,EAAA,WAAa,CAChB,UAAW,aAanB,QAAA,QAAe;;ACDf,aAAA,IAAA,EAAA,MAAA,KAAA,iBAAA,SAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,IAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAhBA,MAAA,EAAA,EAAA,QAAA,0BAEA,MAAM,UAAqB,EAAA,QAKvB,YAAY,GACF,MAAA,GAEV,SACU,MAAA,EAAQ,KAAK,kBAAkB,EAAa,WAAW,eAEtD,OADF,KAAA,UAAU,OAAO,GACf,KAAK,WAVT,EAAA,WAAa,CAChB,cAAe,YAYvB,QAAA,QAAe;;ACCf,aAAA,IAAA,EAAA,MAAA,KAAA,iBAAA,SAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,IAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAjBA,MAAA,EAAA,EAAA,QAAA,0BAEA,MAAM,UAAmB,EAAA,QAKrB,YAAY,GACF,MAAA,GAGV,SACU,MAAA,EAAQ,KAAK,kBAAkB,EAAW,WAAW,aAEpD,OADF,KAAA,UAAU,OAAO,GACf,KAAK,WAXT,EAAA,WAAa,CAChB,YAAa,UAarB,QAAA,QAAe;;ACSf,aAAA,IAAA,EAAA,MAAA,KAAA,iBAAA,SAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,IAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IA1BA,MAAA,EAAA,EAAA,QAAA,WACA,EAAA,EAAA,QAAA,eACA,EAAA,EAAA,QAAA,aAEA,MAAM,EAMF,cACS,KAAA,UAAY,SAAS,KACrB,KAAA,YAAc,IAAI,EAAA,QAAS,aAC3B,KAAA,WAAa,IAAI,EAAA,QAAa,iBAC9B,KAAA,QAAU,IAAI,EAAA,QAAW,eAElC,MACU,MAAA,EAAe,KAAK,YAAY,SAChC,EAAiB,KAAK,WAAW,SACjC,EAAc,KAAK,QAAQ,SAE5B,KAAA,UAAU,OAAO,EAAc,EAAgB,IAK5D,QAAA,QAAe;;ACrBf,aAAA,IAAA,EAAA,MAAA,KAAA,iBAAA,SAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,IAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IALA,QAAA,oBACA,MAAA,EAAA,EAAA,QAAA,gBAGM,EAAM,IAAI,EAAA,QAChB,EAAI","file":"src.bd3060eb.js","sourceRoot":"../src","sourcesContent":["abstract class Page {\n    protected container: HTMLElement;\n    static TextObject = {};\n\n     constructor(id: string) {\n        this.container = document.createElement('section');\n        this.container.id = id;\n        \n    }\n\n    protected createHeaderTitle(text: string) {\n        const headerTitle = document.createElement(\"h1\");\n        headerTitle.innerText = text;\n        return headerTitle;\n    }\n    render() {\n        return this.container;\n    }\n}\nexport default Page;","import Page from \"../main/page-template\"\n\nclass MainPage extends Page {\n    static TextObject = {\n        MainTitle: \"Main page\",\n    };\n\n    constructor(id: string) {\n        super(id);\n        \n    }\n    render() {\n        const title = this.createHeaderTitle(MainPage.TextObject.MainTitle);\n        this.container.append(title);\n        return this.container;\n    }\n}\nexport default MainPage;","import Page from \"../main/page-template\";\n\nclass PicturesPage extends Page {\n    static TextObject = {\n        PicturesTitle: \"Pictures\",\n    };\n\n    constructor(id: string) {\n        super(id);      \n    }\n    render() {\n        const title = this.createHeaderTitle(PicturesPage.TextObject.PicturesTitle)\n        this.container.append(title);\n        return this.container;\n    }\n}\nexport default PicturesPage;","import Page from \"../main/page-template\";\n\nclass VideosPage extends Page {\n    static TextObject = {\n        VideosTitle: \"Videos\",\n    };\n\n    constructor(id: string) {\n        super(id);\n    }\n\n    render() {\n        const title = this.createHeaderTitle(VideosPage.TextObject.VideosTitle);\n        this.container.append(title);\n        return this.container;\n    }\n}\nexport default VideosPage;","import MainPage from './main';\nimport PicturesPage from './pictures';\nimport VideosPage from './videos';\n\nclass App {\n    private container: HTMLElement;\n    private initialPage: MainPage;\n    private secondPage: PicturesPage;\n    private endPage: VideosPage;\n    \n    constructor() {\n        this.container = document.body;\n        this.initialPage = new MainPage('main-page');\n        this.secondPage = new PicturesPage('pictures-page');\n        this.endPage = new VideosPage('videos-page')\n    }\n    run() {\n        const mainPageHTML = this.initialPage.render();\n        const secondPageHTML = this.secondPage.render();\n        const endPageHTML = this.endPage.render();\n        \n        this.container.append(mainPageHTML, secondPageHTML, endPageHTML);\n    }\n\n}\n\nexport default App;","import './sass/main.scss';\nimport App from \"./pages/app\";\n\n\nconst app = new App();\napp.run();"]}